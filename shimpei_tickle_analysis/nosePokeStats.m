% nosePokeStats
% calculate frequency of freezing after nose-poke, freezing after failed
% nose-poke etc.

db_user = 'shimpei';
db_password = 'tickle';
db = 'shimpei_rita';
mysql('open','mysql',db_user,db_password); mysql(strcat('use ',db));

exp_id = mysql(sprintf(...
                     [ ' SELECT DISTINCT experiment_id FROM allBehavs ' ... 
                     , ' WHERE phase = ''nose-poke'' ' ...
                     , ' ORDER BY experiment_id ASC ' ...
                     ]));
[exp, phase, start_time, end_time] = mysql(sprintf(...
             [ ' SELECT experiment_id, ' ...
             , ' phase, start_time, end_time ' ...
             , ' FROM allBehavs ' ...
             , ' WHERE experiment_id IN (%s) ' ...
             ], strjoin(arrayfun(@(x) num2str(exp_id(x)), 1:length(exp_id), 'UniformOutput', false), ', ') ...
             ));


mysql('close');

% nose-poke-freezing probability
pokeidx = find(strcmp(phase,'nose-poke'));
frzidx = find(strcmp(phase, 'freezing'));
pokefrz = ismember(pokeidx+2, frzidx);

% failure-freezing probability
failidx = find(strcmp(phase, 'nose poke failed'));
failfrz = ismember(failidx+2, frzidx);

fprintf(['\nNumber of nose-poke = %i \n'...
        , 'Number of freezing after nose-poke = %i\n'...
        , 'Freezing probability after nose-poke = %.2f%%\n\n'...
        , 'Nose-poke success rate = %.2f%%\n'...
        , 'Freezing probability after failure = %.2f%%\n'...
        ], length(pokeidx)...
        , sum(pokefrz)...
        , sum(pokefrz)/length(pokeidx)*100 ...
        , length(failidx)/(length(failidx)+length(pokeidx))*100 ...
        , sum(failfrz)/length(failidx)*100 ...
        );

